{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Varan\\\\Desktop\\\\Code\\\\React-Native\\\\Projects\\\\tic-tac-toe-game\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialCommunityIcons as Icon } from \"@expo/vector-icons\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.initializeGame = function () {\n      _this.setState({\n        gameState: [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\n      });\n    };\n\n    _this.renderIcon = function (row, col) {\n      var value = _this.state.gameState[row][col];\n\n      switch (value) {\n        case 1:\n          return React.createElement(Icon, {\n            name: \"close\",\n            style: styles.tileX,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 23\n            }\n          });\n\n        case -1:\n          return React.createElement(Icon, {\n            name: \"circle-outline\",\n            style: styles.tile0,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 24\n            }\n          });\n\n        default:\n          React.createElement(View, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    _this.onTilePress = function (row, col) {\n      var currentPlayer = _this.state.currentPlayer;\n      var value = _this.state.gameState[row][col];\n      if (value !== 0) return;\n\n      var array = _this.state.gameState.slice();\n\n      array[row][col] = currentPlayer;\n\n      _this.setState({\n        gameState: array\n      });\n\n      var nextPlayer = currentPlayer == 1 ? -1 : 1;\n\n      _this.setState({\n        currentPlayer: nextPlayer\n      });\n    };\n\n    _this.state = {\n      gameState: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n      currentPlayer: 1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initializeGame();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(0, 0);\n        },\n        style: [styles.tile, {\n          borderLeftWidth: 0,\n          borderTopWidth: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, this.renderIcon(0, 0)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(0, 1);\n        },\n        style: [styles.tile, {\n          borderTopWidth: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, this.renderIcon(0, 1)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(0, 2);\n        },\n        style: [styles.tile, {\n          borderTopWidth: 0,\n          borderRightWidth: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, this.renderIcon(0, 2))), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(1, 0);\n        },\n        style: [styles.tile, {\n          borderLeftWidth: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, this.renderIcon(1, 0)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(1, 1);\n        },\n        style: [styles.tile],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, this.renderIcon(1, 1)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(1, 2);\n        },\n        style: [styles.tile, {\n          borderRightWidth: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, this.renderIcon(1, 2))), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(2, 0);\n        },\n        style: [styles.tile, {\n          borderLeftWidth: 0,\n          borderBottomWidth: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, this.renderIcon(2, 0)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(2, 1);\n        },\n        style: [styles.tile, {\n          borderBottomWidth: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, this.renderIcon(2, 1)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onTilePress(2, 2);\n        },\n        style: [styles.tile, {\n          borderBottomWidth: 0,\n          borderRightWidth: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, this.renderIcon(2, 2))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tile: {\n    borderWidth: 5,\n    borderColor: '#007580',\n    width: 100,\n    height: 100\n  },\n  tileX: {\n    color: '#e9896a',\n    fontSize: 60,\n    paddingLeft: 10\n  },\n  tile0: {\n    marginLeft: 10,\n    color: '#96bb7c',\n    fontSize: 60\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/Varan/Desktop/Code/React-Native/Projects/tic-tac-toe-game/App.js"],"names":["React","MaterialCommunityIcons","Icon","App","props","initializeGame","setState","gameState","renderIcon","row","col","value","state","styles","tileX","tile0","onTilePress","currentPlayer","array","slice","nextPlayer","container","flexDirection","tile","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","borderColor","width","height","color","fontSize","paddingLeft","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\r\nimport { MaterialCommunityIcons as Icon } from 'react-native-vector-icons'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      gameState: \r\n      [\r\n        [0, 0, 0],\r\n        [0, 0, 0],\r\n        [0, 0, 0]\r\n      ]\r\n  ,\r\n      currentPlayer: 1,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeGame()\r\n  }\r\n\r\n  initializeGame = () => {\r\n    this.setState({gameState: \r\n      [\r\n        [0, 0, 0],\r\n        [0, 0, 0],\r\n        [0, 0, 0]\r\n      ]\r\n    })\r\n  }\r\n\r\n  renderIcon = (row, col) => {\r\n    let value = this.state.gameState[row][col]\r\n    switch(value) {\r\n      case 1: return  <Icon name=\"close\" style={styles.tileX} /> \r\n      case -1: return  <Icon name=\"circle-outline\" style={styles.tile0} />\r\n      default: <View></View>\r\n    }\r\n  }\r\n\r\n  onTilePress = (row, col) => {\r\n    let currentPlayer = this.state.currentPlayer\r\n    \r\n    // Checking the override condition and preventing to override existing value with a new value\r\n    let value = this.state.gameState[row][col]\r\n    if (value !== 0)\r\n      return    // No need to do anything\r\n\r\n    // Set the correct tile\r\n    let array = this.state.gameState.slice()\r\n    array[row][col] = currentPlayer\r\n    this.setState({gameState: array})\r\n\r\n    // Switch to other player\r\n    let nextPlayer = (currentPlayer == 1) ? -1 : 1\r\n    this.setState({currentPlayer: nextPlayer})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n\r\n        <View style={{flexDirection: \"row\"}}>\r\n          <TouchableOpacity onPress={() => this.onTilePress(0, 0)} style={[styles.tile, { borderLeftWidth: 0, borderTopWidth: 0}]} >\r\n           {this.renderIcon(0, 0)}\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => this.onTilePress(0, 1)} style={[styles.tile, { borderTopWidth: 0}]} >\r\n            {this.renderIcon(0, 1)}  \r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => this.onTilePress(0, 2)} style={[styles.tile, { borderTopWidth: 0, borderRightWidth: 0}]} >\r\n            {this.renderIcon(0, 2)}\r\n          </TouchableOpacity>\r\n        </View>\r\n        \r\n        <View style={{flexDirection: \"row\"}}>\r\n          <TouchableOpacity onPress={() => this.onTilePress(1, 0)} style={[styles.tile, { borderLeftWidth: 0}]} >\r\n            {this.renderIcon(1, 0)}\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => this.onTilePress(1, 1)} style={[styles.tile]} >\r\n            {this.renderIcon(1, 1)}\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => this.onTilePress(1, 2)} style={[styles.tile, { borderRightWidth: 0}]} >\r\n            {this.renderIcon(1, 2)}\r\n          </TouchableOpacity>\r\n        </View>\r\n        \r\n        <View style={{flexDirection: \"row\"}}>\r\n          <TouchableOpacity onPress={() => this.onTilePress(2, 0)} style={[styles.tile, { borderLeftWidth: 0, borderBottomWidth: 0}]} >\r\n            {this.renderIcon(2, 0)}\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => this.onTilePress(2, 1)} style={[styles.tile, { borderBottomWidth: 0}]} >\r\n            {this.renderIcon(2, 1)}\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => this.onTilePress(2, 2)} style={[styles.tile, { borderBottomWidth: 0, borderRightWidth: 0}]} >\r\n            {this.renderIcon(2, 2)}\r\n          </TouchableOpacity>\r\n        </View>\r\n        \r\n\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  tile: {\r\n    borderWidth: 5, \r\n    borderColor: '#007580',\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  tileX: {\r\n    color: '#e9896a',\r\n    fontSize: 60,\r\n    paddingLeft: 10\r\n  },\r\n  tile0: {\r\n    marginLeft: 10,\r\n    color: '#96bb7c',\r\n    fontSize: 60,\r\n  }\r\n})\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}